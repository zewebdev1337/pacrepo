name: Build & Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux]
        goarch: [amd64, arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.3'
          cache: true

      - name: Run Go Tests
        run: go test -v ./...

      - name: Build Go binary
        run: |
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build --trimpath -ldflags="-s -w" -o pacrepo-${{ matrix.goos }}-${{ matrix.goarch }} ./cmd/main.go
          if [[ "${{ matrix.goos }}" == "linux" && "${{ matrix.goarch }}" == "amd64" ]]; then
            cp pacrepo-linux-amd64 pacrepo
          fi

      - name: Create Release Assets Package
        run: tar -czvf pacrepo-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz pacrepo-${{ matrix.goos }}-${{ matrix.goarch }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: pacrepo-${{ matrix.goos }}-${{ matrix.goarch }}
          path: |
            pacrepo-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz
            pacrepo-${{ matrix.goos }}-${{ matrix.goarch }}
            pacrepo

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create or Update GitHub Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "artifacts/*/*"
          token: ${{ secrets.GITHUB_TOKEN }}
          generateReleaseNotes: true
          allowUpdates: true 
          tag: ${{ github.ref_name }} 